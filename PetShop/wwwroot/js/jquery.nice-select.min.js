/* jQuery Nice Select - v1.0
   https://github.com/hernansartorio/jquery-nice-select
   Made by Hernán Sartorio */
(function ($) {
    $.fn.niceSelect = function (method) {
        function createNiceSelect(element) {
            
        }

        
        this.each(function () {
            var element = $(this);

            if (!element.next().hasClass("nice-select")) {
                createNiceSelect(element);
            }
        });

        $(document).off(".nice_select");
        $(document).on("click.nice_select", ".nice-select", function (event) {
            var niceSelect = $(this);
            $(".nice-select").not(niceSelect).removeClass("open");
            niceSelect.toggleClass("open");

            if (niceSelect.hasClass("open")) {
                niceSelect.find(".option");
                niceSelect.find(".focus").removeClass("focus");
                niceSelect.find(".selected").addClass("focus");
            } else {
                niceSelect.focus();
            }
        });

        $(document).on("click.nice_select", function (event) {
            if ($(event.target).closest(".nice-select").length === 0) {
                $(".nice-select").removeClass("open").find(".option");
            }
        });

        $(document).on("click.nice_select", ".nice-select .option:not(.disabled)", function (event) {
            var option = $(this);
            var niceSelect = option.closest(".nice-select");

            niceSelect.find(".selected").removeClass("selected");
            option.addClass("selected");

            var displayText = option.data("display") || option.text();
            niceSelect.find(".current").text(displayText);
            niceSelect.prev("select").val(option.data("value")).trigger("change");
        });

        $(document).on("keydown.nice_select", ".nice-select", function (event) {
            var niceSelect = $(this);
            var focusedOption = niceSelect.find(".focus") || niceSelect.find(".list .option.selected");

            if (event.keyCode === 32 || event.keyCode === 13) {
                if (niceSelect.hasClass("open")) {
                    focusedOption.trigger("click");
                } else {
                    niceSelect.trigger("click");
                }

                return false;
            }

            if (event.keyCode === 40) {
                if (niceSelect.hasClass("open")) {
                    var nextOption = focusedOption.nextAll(".option:not(.disabled)").first();

                    if (nextOption.length > 0) {
                        niceSelect.find(".focus").removeClass("focus");
                        nextOption.addClass("focus");
                    }
                } else {
                    niceSelect.trigger("click");
                }

                return false;
            }

            if (event.keyCode === 38) {
                if (niceSelect.hasClass("open")) {
                    var prevOption = focusedOption.prevAll(".option:not(.disabled)").first();

                    if (prevOption.length > 0) {
                        niceSelect.find(".focus").removeClass("focus");
                        prevOption.addClass("focus");
                    }
                } else {
                    niceSelect.trigger("click");
                }

                return false;
            }

            if (event.keyCode === 27) {
                if (niceSelect.hasClass("open")) {
                    niceSelect.trigger("click");
                }
            } else if (event.keyCode === 9 && niceSelect.hasClass("open")) {
                return false;
            }
        });

        var testElement = document.createElement("a").style;
        testElement.cssText = "pointer-events:auto";

        if (testElement.pointerEvents !== "auto") {
            $("html").addClass("no-csspointerevents");
        }

        return this;
    };
})(jQuery);
